{"ast":null,"code":"var _jsxFileName = \"/home/juliocezar/aaPortfolio_Web_git/Wxhbr.github.io/exercises/15.1/jogo-velha-app/src/JogoVelha.js\";\nimport React from 'react';\nimport \"./JogoVelha.css\";\n\nclass JogoVelha extends React.Component {\n  constructor(props) {\n    super(props);\n    localStorage.setItem('marker', 'O');\n    this.state = {\n      array: [{\n        0: '',\n        1: '',\n        2: '',\n        3: '',\n        4: '',\n        5: '',\n        6: '',\n        7: '',\n        8: ''\n      }],\n      isFinished: false\n    };\n    this.markGrid = this.markGrid.bind(this);\n  }\n\n  validateRows(arrayGrids) {\n    let array = [];\n    const rows = [[0, 1, 2], [3, 4, 5], [6, 7, 8]];\n    array = Object.values(arrayGrids[0]);\n    Object.keys(arrayGrids[0]).map((el, index) => array[index] = arrayGrids[0][el]); // while(teste) {\n    //   while(controle && arrayGrids[0]) {\n    //     console.log('teste', index);\n    //     if (arrayGrids[index] !== arrayGrids[index + 1]) controle = false;\n    //     index++;\n    //   }\n    // }\n  }\n\n  gameOver(arrayGrids) {\n    this.validateRows(arrayGrids);\n  }\n\n  markGrid(event, arrayGrids) {\n    const {\n      target\n    } = event;\n    const {\n      id\n    } = target;\n    const marker = localStorage.getItem('marker');\n\n    if (marker === 'O') {\n      localStorage.setItem('marker', 'X');\n      target.innerHTML = 'X';\n      this.setState(state => ({\n        array: [{ ...state.array[0],\n          [`${id}`]: localStorage.getItem('marker')\n        }]\n      }));\n    } else {\n      localStorage.setItem('marker', 'O');\n      target.innerHTML = 'O';\n      this.setState(state => ({\n        array: [{ ...state.array[0],\n          [`${id}`]: localStorage.getItem('marker')\n        }]\n      }));\n    }\n  }\n\n  gridJogoDaVelha() {\n    const arrayGrids = [];\n\n    for (let index = 0; index < 9; index++) {\n      arrayGrids[index] = React.createElement(\"button\", {\n        type: \"button\",\n        id: index,\n        key: index,\n        className: \"grid\",\n        onClick: e => this.markGrid(e, arrayGrids),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    }\n\n    return arrayGrids;\n  }\n\n  render() {\n    const {\n      isFinished,\n      array\n    } = this.state;\n    this.gameOver(array);\n    if (isFinished) return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"O JOGO ACABOU\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Jogo da Velha: \"), React.createElement(\"div\", {\n      className: \"grid_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.gridJogoDaVelha()));\n  }\n\n}\n\nexport default JogoVelha;","map":{"version":3,"sources":["/home/juliocezar/aaPortfolio_Web_git/Wxhbr.github.io/exercises/15.1/jogo-velha-app/src/JogoVelha.js"],"names":["React","JogoVelha","Component","constructor","props","localStorage","setItem","state","array","isFinished","markGrid","bind","validateRows","arrayGrids","rows","Object","values","keys","map","el","index","gameOver","event","target","id","marker","getItem","innerHTML","setState","gridJogoDaVelha","e","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./JogoVelha.css\";\n\nclass JogoVelha extends React.Component {\n  constructor(props) {\n    super(props);\n    localStorage.setItem('marker', 'O');\n    this.state = {\n      array: [\n        {\n          0: '',\n          1: '',\n          2: '',\n          3: '',\n          4: '',\n          5: '',\n          6: '',\n          7: '',\n          8: '',\n        }\n      ],\n      isFinished: false,\n    }\n    this.markGrid = this.markGrid.bind(this);\n  }\n\n  validateRows(arrayGrids) {\n    let array = [];\n    const rows = [[0, 1, 2], [3, 4, 5], [6, 7, 8]]\n    array = Object.values(arrayGrids[0]);\n    Object.keys(arrayGrids[0]).map((el, index )=> array[index] = arrayGrids[0][el])\n    // while(teste) {\n\n    //   while(controle && arrayGrids[0]) {\n    //     console.log('teste', index);\n    //     if (arrayGrids[index] !== arrayGrids[index + 1]) controle = false;\n    //     index++;\n    //   }\n    // }\n  }\n\n  gameOver(arrayGrids) {\n    this.validateRows(arrayGrids)\n  }\n\n  markGrid(event, arrayGrids) {\n    const { target } = event;\n    const { id } = target;\n    const marker = localStorage.getItem('marker');\n    if (marker === 'O') {\n      localStorage.setItem('marker', 'X');\n      target.innerHTML = 'X';\n      this.setState((state) => ({\n        array: [{\n          ...state.array[0],\n          [`${id}`]: localStorage.getItem('marker'),\n        }]\n      }))\n    }\n    else {\n      localStorage.setItem('marker', 'O');\n      target.innerHTML = 'O';\n      this.setState((state) => ({\n        array: [{\n          ...state.array[0],\n          [`${id}`]: localStorage.getItem('marker'),\n        }]\n      }))\n    }\n  }\n\n  gridJogoDaVelha() {\n    const arrayGrids = []\n    for (let index = 0; index < 9; index++) {\n      arrayGrids[index] = <button type=\"button\" id={index} key={index} className=\"grid\" onClick={(e) => this.markGrid(e, arrayGrids)} />\n    }\n    return arrayGrids;\n  }\n\n  render() {\n    const { isFinished, array } = this.state;\n    this.gameOver(array);\n    if (isFinished) return <h1>O JOGO ACABOU</h1>\n    return (\n      <div>\n        <div>Jogo da Velha: </div>\n        <div className=\"grid_container\">\n          {this.gridJogoDaVelha()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JogoVelha;"]},"metadata":{},"sourceType":"module"}